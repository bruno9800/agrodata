generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  hashedPassword String?
  googleId       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Profile        Profile?
  Safra          Safra[]
}

model Profile {
  id        String   @id @default(uuid())
  avatarUrl String?
  userId    String   @unique
  birthdate String?
  name      String?
  plan      Plan     @default(FREE)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Plan {
  FREE
  PREMIUM
}

// domain

model Safra {
  id              Int      @id @default(autoincrement())
  culture         String
  name            String?
  squareArea      Float?
  quantityPlanted Int?
  createdAt       DateTime @default(now())

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  userId  String
  Produto Product[]
  Service Service[]
  Harvest Harvest[]
}

model Product {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  safra      Safra        @relation(fields: [safraId], references: [id], onDelete: Cascade)
  safraId    Int
  BuyProduct BuyProduct[]
}

model BuyProduct {
  id        Int      @id @default(autoincrement())
  price     Float
  quantity  Int
  store     String?
  createdAt DateTime @default(now())

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Service {
  id    Int    @id @default(autoincrement())
  name  String
  price Float

  createdAt DateTime @default(now())

  safra   Safra @relation(fields: [safraId], references: [id], onDelete: Cascade)
  safraId Int
}

model Harvest {
  id            Int      @id @default(autoincrement())
  kilograms     Int?
  current_price Float?
  gain          Float
  createdAt     DateTime @default(now())

  safra   Safra @relation(fields: [safraId], references: [id], onDelete: Cascade)
  safraId Int
}
